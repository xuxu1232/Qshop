"""
Django settings for Qshop project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j@1ed@f1vq+g_w84q%v$(r)97i#yod=fdxzg6v8(xp!%un48$$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Saller',
    'Buyer',
    'djcelery',
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'Qshop.middlewaretest.MiddleWareTest',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'Qshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Qshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'Qshop',
#         'USER': 'root',
#         'PASSWORD': '123',
#         'HOST': '10.10.107.183',
#         'PORT': '3306',
#     },
#     'slave': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'Qshop',
#         'USER': 'root',
#         'PASSWORD': '123',
#         'HOST': '10.10.107.80',
#         'PORT': '3306',
#     },
# }


DATABASES = {
    # 主库
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    # 从库
    # 'slave2': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db3.sqlite3'),
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)
# 将子路由的静态文件收集到主目录
# 因为它与STATICFILES_DIRS，MEDIA_URL，MEDIA_ROOT冲突，收集结束后要注掉
# STATIC_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'static')

## 缓存配置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION':[
            '127.0.0.1:11211'
        ]
    }
}
CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'default'

# DATABASE_ROUTERS = ['mydbrouter.Router']


## 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'debug.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# 公钥
alipay_public_key_srting = """-----BEGIN PUBLIC KEY-----
   MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtg38R08k7Eqj252zWR1Udoh4E2oXikr+aP6a1NZyWB4/aRpM67z6cZdscqEaG0OAfwjJFoJM11CboW5OmY2WvpKZ1QSkjguFtvR6yUNGlgTGvMUrgml58cq5IoPiMUsxmCekUj99F/TPJRB5YPNszzYhq8cujpQEOu8TiDVBNuyAqJSQq58CHFqbjp6Z1aRtagYh1N4O1urKJke5ua8Mjm1FUe9XwlmBwFU0W8xvFM4zAjdc7TdXM6oWMP12dZqMghL1OV7xdtnRMAgSYq4hSDZxkrxfolMzwlD4pUQ3zpVyFaN0x4v3p6+4fMDSmPLe3tdjAT6hwv2lhco4WnK6hQIDAQAB
   -----END PUBLIC KEY-----"""

# 私钥
alipay_private_key_string = """-----BEGIN RSA PRIVATE KEY-----
   MIIEpQIBAAKCAQEAtg38R08k7Eqj252zWR1Udoh4E2oXikr+aP6a1NZyWB4/aRpM67z6cZdscqEaG0OAfwjJFoJM11CboW5OmY2WvpKZ1QSkjguFtvR6yUNGlgTGvMUrgml58cq5IoPiMUsxmCekUj99F/TPJRB5YPNszzYhq8cujpQEOu8TiDVBNuyAqJSQq58CHFqbjp6Z1aRtagYh1N4O1urKJke5ua8Mjm1FUe9XwlmBwFU0W8xvFM4zAjdc7TdXM6oWMP12dZqMghL1OV7xdtnRMAgSYq4hSDZxkrxfolMzwlD4pUQ3zpVyFaN0x4v3p6+4fMDSmPLe3tdjAT6hwv2lhco4WnK6hQIDAQABAoIBAQC1WKUOW1YKUid64lH+2OqD0Fjb7fhY928JI2UT0jHAeRDtHxe0U2Cduhp67ONWeR0MbbHxTAZDDLaaTYjaCGI6n0nBGYjZPb0Ki+mrhepQEZ3t9/HpTCv+oNNeAEVWmPJkAEj87OUs8d1NrGVcH98pYWCU/inwOJ0mH3QzX+kATVEQ93hJZV+nEGk7MKm5/RrP6FGfmEeaKZtuzjyn8fKKkZvp+MWjZwrdKMx6wrAO+vOIUMPlM9Jsj70lDsh9fLb8fHawcV1DjHghSbktkO9Dp076mPU/SM7QkYsm9epxo+IAiXrWm2Hv5hzbPIkQs6X47RwYJ8y10wSZtjCS25UBAoGBAPCoarpCx3tQt9D0I6GT/CNoMeVnmfuTiOY8nb0xZkKGzoR7pWQzVBH/ENW6/uiD+RO8UV3z+bCPe+mXEd8T4Je0pz9qCwkOwLvrywUiK/vLYMdzAdSZiBm4TxAImiI0n9pV9lxFi1nyzBCaiqYohYjSg5tm8eTpmxFDJLM+GgRlAoGBAMGpJvhPnNWDTPUlFpnBPgvLFsruvqOsOLNzKr7S4DHEB4pSnp/15tUfpFg24UNUdDSZyu/qVSRSfvcN/tTshHU/qZwM3OihaDYZDlpz0PDWAZEM8fgu2M2IuUbTo4+5kqHrWPGjWXtVgPc1kXy83HWhFkuT+pJ1s/KRfPST5SuhAoGAYKKAGMLv7yh+Zz1hgWQ2/tC8GG39evPHKQx2Gp5Xfac8Dh7ITu/9diyByhEIgr1bqv0Xfy6UuL0k+Ktc1cLZkJFOBzzBqaVu5wbLwwfxuW31MqGPvprX99v2g22w1sNi3P1fq7WRO1EveAtWWVo0JLjDeAdiYpUbW1cmyYLKV7ECgYEAwUkUbgz3mVqc+qdzsS3fwWGHdC9o8m63gNNXPHG39bOTWwku7LQ/GUOlga30koC+IqnElEOrir8TnXzIdLdDVMqfe/KSoVRHcIb9fmXNijHuClmDP5NyK2Fkmj4tJwuuQBFnCnVgn+os947tkDPnTTfjyrb9BiSX32g58NmTh0ECgYEAvpAhkck7HwHo8y+Txqvt2RV2eB5VlE9gJMokbkjSeTqcGygoKo5qj3W7eaEID0GtOotBn8rEI/hIaJ2T++w8pM82JPmMO6xL92rrUjMCAnI5n53WIt2n/LqusC1e/wy3ABN4U+3XJ4ZMCYVMz2+rzUdjtOvuwRkwjnqJUGT2gzc=
   -----END RSA PRIVATE KEY-----"""



import djcelery   ## 导入djcelery 包
djcelery.setup_loader() ### 进行模块载入
BROKER_URL = 'redis://127.0.0.1:6379/1' ## 中间件，指定redis,下标为1 的数据库
BACKEND_URL = 'redis://127.0.0.1:6379/2'
CELERY_IMPORTS = ('CeleryTask.tasks') ##  具体的任务文件
CELERY_TIMEZONE = 'UTC' ## celery时区，和django一致
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler' ##django的处理器，是固定的


## 定时性任务
from celery.schedules import timedelta
CELERYBEAT_SCHEDULE = {
    u'测试任务':{
        "task":"CeleryTask.tasks.test", ## 要执行的任务函数
        "schedule":timedelta(seconds=1),## 执行时间，每隔一秒执行一次
    }
}